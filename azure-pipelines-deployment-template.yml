parameters:
  - name: "environment"
    type: "string"
    displayName: "The name of the environment"

  - name: "pipelineName"
    type: "string"
    displayName: "The name of the pipeline"

  - name: "backendServiceName"
    type: "string"
    displayName: "The name of the backend service"

  - name: "tfStateRgName"
    type: "string"
    displayName: "The name of the az resource group where the tf state file should be"

  - name: "tfStateStName"
    type: "string"
    displayName: "The name of the az storage account where the tf state file should be"

  - name: "tfStateCtrName"
    type: "string"
    displayName: "The name of the az storage account container where the tf state should be"

jobs:
  - job: Deploy
    displayName: Deploy ${{parameters.environment}}
    continueOnError: false
    pool:
      name: "Azure Pipelines"
      vmImage: "windows-latest"
    steps:
      - task: TerraformInstaller@0
        displayName: "Install Terraform"
        inputs:
          terraformVersion: latest
      - task: TerraformCLI@0
        displayName: "Terraform init"
        inputs:
          backend: "false"
          workingDirectory: "$(Build.SourcesDirectory)"
          backendServiceArm: ${{parameters.backendServiceName}}
          backendAzureRmResourceGroupName: ${{parameters.tfStateRgName}}
          backendAzureRmStorageAccountName: ${{parameters.tfStateStName}}
          backendAzureRmContainerName: ${{parameters.tfStateCtrName}}
          backendAzureRmKey: "terraform-${{lower(parameters.environment)}}.tfstate"
      - task: TerraformCLI@0
        displayName: "Terraform apply"
        inputs:
          command: apply
          workingDirectory: "$(Build.SourcesDirectory)"
          commandOptions: '--var-file="variables/${{lower(parameters.environment)}}.tfvars"'
          environmentServiceNameAzureRM: ${{parameters.backendServiceName}}
